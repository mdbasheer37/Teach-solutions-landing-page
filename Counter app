<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>React Click Counter</title>
    <script src="https://unpkg.com/react@18/umd/react.development.js"></script>
    <script src="https://unpkg.com/react-dom@18/umd/react-dom.development.js"></script>
    <script src="https://unpkg.com/@babel/standalone/babel.min.js"></script>
    <style>
        body {
            margin: 0;
            font-family: 'Arial', sans-serif;
        }
        
        #root {
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            min-height: 100vh;
            background-color: #f5f5f5;
            padding: 2rem;
        }

        h1 {
            color: #2c3e50;
            margin-bottom: 2rem;
        }

        .counter-display {
            text-align: center;
            margin-bottom: 2rem;
        }

        .count {
            font-size: 3rem;
            font-weight: bold;
            color: #3498db;
            display: block;
            margin-bottom: 1rem;
        }

        .limit-message {
            color: #e74c3c;
            font-weight: bold;
        }

        .button-group {
            display: flex;
            gap: 1rem;
        }

        .btn {
            padding: 0.8rem 1.5rem;
            border: none;
            border-radius: 5px;
            font-size: 1rem;
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .increase {
            background-color: #2ecc71;
            color: white;
        }

        .increase:hover {
            background-color: #27ae60;
        }

        .increase:disabled {
            background-color: #95a5a6;
            cursor: not-allowed;
        }

        .decrease {
            background-color: #e74c3c;
            color: white;
        }

        .decrease:hover {
            background-color: #c0392b;
        }

        .decrease:disabled {
            background-color: #95a5a6;
            cursor: not-allowed;
        }

        .reset {
            background-color: #3498db;
            color: white;
        }

        .reset:hover {
            background-color: #2980b9;
        }
    </style>
</head>
<body>
    <div id="root"></div>

    <script type="text/babel">
        const { useState } = React;

        function App() {
            const [count, setCount] = useState(0);
            const MAX_LIMIT = 10;

            const increaseCount = () => {
                setCount(prevCount => prevCount + 1);
            };

            const decreaseCount = () => {
                setCount(prevCount => (prevCount > 0 ? prevCount - 1 : 0));
            };

            const resetCount = () => {
                setCount(0);
            };

            return (
                <div className="app">
                    <h1>Click Counter</h1>
                    <div className="counter-display">
                        <span className="count">{count}</span>
                        {count >= MAX_LIMIT && (
                            <p className="limit-message">You've reached the limit!</p>
                        )}
                    </div>
                    <div className="button-group">
                        <button 
                            className="btn increase" 
                            onClick={increaseCount}
                            disabled={count >= MAX_LIMIT}
                        >
                            Increase
                        </button>
                        <button 
                            className="btn decrease" 
                            onClick={decreaseCount}
                            disabled={count === 0}
                        >
                            Decrease
                        </button>
                        <button className="btn reset" onClick={resetCount}>
                            Reset
                        </button>
                    </div>
                </div>
            );
        }

        const root = ReactDOM.createRoot(document.getElementById('root'));
        root.render(<App />);
    </script>
</body>
</html>
